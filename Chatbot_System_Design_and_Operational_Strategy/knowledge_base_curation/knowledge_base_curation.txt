Main Feature: Knowledge Base Curation
======================================

their knowledge base in which format can be, initially knowledge base how to ingest, sub-section updates will be
I expect that someone’s doc will be Google Doc, someone’s Word, someone’s PDF, so I can also transcribe, for us, all things same, we can see what we will get, like some documents and structured comments, and in our system there will be mechanism to upload in multiple documents and convert to co-fax, okay
in this Excel chat cannot happen, yes, in this Excel chat cannot happen, so our backend will do all the work, chat will be like some parsed, and documents will be seen
that Excel data, send to person, we have sent to client, took it, if Excel support not given, suppose, because in which format will Excel be, exactly its interpretation, why in Excel we said sorry, people maintain in Excel sometimes, and that data for entry fee and it was given by Reki, it happened like that, design complete, so tell that Excel also important, so we say no, whatever raw data you give, you have to give in this form, or this document is Word, you have to fill, whatever position not listed, till what we can do, majority cases can do
We say that Excel, all this is not necessary that we integrate as-is and implement, therefore support we will put in backend, we will say we will do it in re-requirements that yes, this Excel PDF/text/meeting transcript, whatever Google backup, everything, support easily, basically we are registering data, so our chat docs in it, see registered, that general registration of our application, chat docs, they register at high abstract or channel level, not very specific structured semi, I would rather say fully structured, because structured data, you have deterministic, that category is, that not to put in case opinion initially, so we get structured information, whatever structure comes, then we can also put in opinion as we like, we have to put, yes exactly, first we need to make comprehensive type facts, frequent here ask question, which unstructured data is, we also have structured data, in it chunking we do not need to do, just like that, right, when facts go forward, then the answer will come
which information we have registered in the FAX, which is also server-side, we need to make protocol for them that they review their respective information individually.
its precise thing is that these questions, their answer we need to fetch, because rates are, they fetch some questions’ answer, data master we have, whole data, if someone wants to do, but dynamic, someone easily wants, and dynamic also shows in Excel, exactly, if any master updates any of these, then it should have an interface, give them option on interface, in it could be that we have some acts in the system, that basically business how runs, we will know what we have, but some information or expects they need to feed, if they need to feed, yes, give them a form on dashboard, which fills from our data piece and displays, they update, and when update, press a push button, it goes, converts to embed, and updates old embed again, ok, this information we need, through function calling, what things we should not do, no, through function calling, meaning, what we need, we need that at this time, whatever a particular course rate is, in our database in one place, this defined function exists, and it will not be too many functions, 20-30-40 facts, which over time change, dynamic things we need in DB, things which we tell it, that which information you need, it will tell, also it will provide, also in training form how we do in DB, for persistence attach in memory
Initially, we say that as your rates get updated, update the responsibility infusion in your database.
Initially, our static information will remain, dynamic information which we expect, say, 25 or 40 cases expected, which will be dynamic content, then from DB fetch, ok, and function calling mechanism, tools, those are tools
ingestion full discussion done
where knowledge base Q&A comes
It will have a knowledge base, static and dynamic. When you check it, you can see the full data, review it, configure the dynamic knowledge base’s variety. By default, assume one entity, but it can be configured.
Multi-tenancy: multiple knowledge bases exist but a unique deployment.
Regarding new information, there should be a review cycle—one or two weeks, configurable. For example, if we collect facts or knowledge, we ingest it and after review, concrete information is approved and added to the system. We may keep raw information for two weeks, and after four weeks, reprocess it to update the text while preserving previous context. Old data is retained but new ingestion should not overlap old data.
If similar information comes in, the system must identify whether it is an already asked question or a new question on a similar topic. For highly relevant facts, we check similarities; if four or five facts match closely, they may be marked as duplicates. A mechanism must be built to handle this dynamically. Scheduled updates will occur in panels but are not fully automatic—user input is needed for dynamic adjustments.
Stack information is stored and auto-updated. Users can configure whether new reviews are done automatically or at initial review level. New information will appear on the dashboard, and automation can be enabled later once confidence levels are satisfactory.
Regarding the dashboard analytics: it should display topics, frequency, matches, and trends in messages and interactions, providing insights on message relevance, new questions, and similarity patterns.