Extracted Meeting Features:

- Interview phase
- API integration for message extraction (up to six months backup)
- Knowledge base formats (Google Doc, Word, PDF)
- Knowledge base ingestion mechanism (initial and updates)
- Support for multiple document uploads and conversion to co-fax
- Backend for chat processing and document parsing
- Structured and unstructured data handling
- Chunking (for unstructured data)
- Pre-concerns support
- Text and listening inside chatbot
- Bulk export functionality
- Selective polling
- Integration with WhatsApp Business account for message polling
- Mobile full backup sharing
- Data storage (iCloud, Google Drive backup files)
- Listening feature for event chats
- Support for various document types (Excel, PDF, text, meeting transcript, Google backup)
- General application registration
- High abstract or channel-level registration
- Frequent Asked Questions (FAQs) management
- LLM for dynamic information automation
- Function calling mechanism for dynamic data fetching
- Persistence attachment in memory for training data
- Handling of text messages, audio messages, images
- Design posters/brochures with images
- Static and dynamic information management for content
- Function calling mechanism/tools
- Intent determination for prompts
- Similarity score for Q&A and escalation to human
- Repeated attempt failure escalation to human
- Metric timing for human escalation
- Intervention recognition prototype with flow diagram
- Web server links for polling
- Scraping latest rates/schedules
- Server-side FAX registration with review protocol
- Manual triggering of application functions
- Reminders and fallback to human escalation
- Escalation definition (forwarding chat)
- Template message approval for initiated chats
- Transparency in chatbot replies from user perspective
- Human intervention for specific cases (e.g., image verification of payment)
- WhatsApp login numbers/backup for humans
- WhatsApp sessions for humans in a group
- Same WhatsApp Business account UI for human replies
- Separate dashboard for escalations
- Tracking attended users/escalations
- Online account portal activation
- Notification system for human escalation on dashboard
- Context tracking in chat session for human replies
- Multiple numbers per client (Stream One, Operations, Support, Generator Team, Proctor Support Team)
- Service workflow for user receipts verification
- Ticket system for human escalations (assigned to humans, picked up)
- Our app/web interface for handling tickets
- Forwarding information/images to a channel for search and WhatsApp handling
- Dashboard handling of messages from our end
- Notifications for dispatched messages
- API polling for WhatsApp messages (if not logged in)
- Support for one-to-one escalation
- WhatsApp Business Account updates
- Business Solution Providers (BSPs) information (cap, shipped days, active users)
- Human response becomes part of subthread, human takes ownership (takeover)
- Chatbot control returns after escalation closure
- Bot state management during escalation (multiple sessions/threads in memory)
- Discarding information in VBAN
- Merging multiple sessions in memory on dashboard
- Single thread context for 95% cases
- Maintaining all contexts in IB
- Intelligent session/thread handling (treat independently, identify user question)
- Track, bind, verify (TBV) mechanism
- Explicit human connection ("I want to talk to a person")
- Transcribing and understanding audio/data to reply
- Direct human escalation for images/unclear data
- Assigning human escalation based on timing/availability
- Tracking module for escalation timeouts
- Escalation randomization (e.g., 24-hour window)
- Assigning fallback numbers in service packaging
- Shift-based human availability (two shifts, 16 hours)
- Service/work unit creation with escalator parameters, registered/fake escalators, full flow system
- Spawning new services for new clients
- Knowledge base (static and dynamic) configuration and review
- Single-tenant system (configurable for max services per tenant)
- Setting limits and charging for services
- Transparency in system (independent operation, escalator tracking, monitoring, testing, dashboard management)
- Image/video processing (ignore video for now, extract audio from video and treat as text/audio)
- Rate limits (user-based, per message type: audio, text, images, video)
- Configurable system limits (audio length, text length, number of image files, pages)
- Rate limit per bot interaction (e.g., 60 per hour)
- Security and audit (partially implemented)
- Dashboard for new messages and rule-based handling
- Handling irrelevant content (auto-reply)
- Terminating/blocking users for repeated similar queries (24-hour hold on reply)
- Flagging user behavior (configurable)
- Tagging low similarity score questions
- Auto-retrieving prior interactions
- Warning users for exceeding quota (e.g., 50%)
- Flagging irrelevant passages, long files, too many messages (distinct reasons)
- Dynamic and configurable flag list from front end
- Filtering repeated relevant vs. irrelevant messages
- Extensive checks for all messages
- Identifying new information based on low similarity score and human verification
- Review cycle for new information (configurable, e.g., 1-2 weeks)
- Ingestion and reprocessing of raw information (after 4 weeks to update text, preserve context)
- Identifying duplicate facts based on similarity (4-5 close matches)
- Dynamic mechanism for duplicate handling
- Scheduled updates in panels (not fully automatic, user input for dynamic adjustments)
- Stack information storage and auto-update
- Configurable auto-review for new information (later automation)
- Dashboard analytics (topics, frequency, matches, trends, relevance, new questions, similarity patterns)
- Support bars, escalation, verification in dashboard, backup, release tracking in matching process
- Module flow, dashboard checklists, monitoring support activities
- Website user interaction tracking
- Support and comparison reports
- Recording email information on dashboard
- Storing raw information (amount to be determined)
- Calculating success rate based on successful answers
- Session termination (e.g., 24 hours, 4-hour intervals without response)
- Calculating satisfaction/quality rating per session
- Tracking user mobile number, duration, related info for metrics/statistics
- Handling 24-hour activity windows
- High-level flow diagram (tool selection: Miro vs. manual)
